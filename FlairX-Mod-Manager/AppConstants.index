COMPONENT: AppConstants
DESCRIPTION: Central configuration class containing all application constants, file paths, game configurations, and system settings

================================================================================
FILE: AppConstants.cs
TOTAL LINES: 130

LINE RANGES:
├── Namespace declaration: lines 1-2
├── AppConstants class: lines 3-130
│   ├── File Extensions: lines 5-10
│   │   ├── MOD_JSON_FILENAME: line 6
│   │   ├── BACKUP_EXTENSION: line 7
│   │   ├── INI_EXTENSION: line 8
│   │   └── JSON_EXTENSION: line 9
│   ├── Directory Names: lines 11-17
│   │   ├── SETTINGS_FOLDER: line 12
│   │   ├── LANGUAGE_FOLDER: line 13
│   │   ├── MOD_LIBRARY_FOLDER: line 14
│   │   ├── XXMI_FOLDER: line 15
│   │   └── ASSETS_FOLDER: line 16
│   ├── File Names: lines 18-26
│   │   ├── SETTINGS_FILE: line 19
│   │   ├── ACTIVE_MODS_FILE: line 20
│   │   ├── SYMLINK_STATE_FILE: line 21
│   │   ├── STATUS_KEEPER_LOG_FILE: line 22
│   │   ├── APPLICATION_LOG_FILE: line 23
│   │   └── D3DX_USER_INI_FILE: line 24
│   ├── Default Paths: lines 27-31
│   │   ├── DEFAULT_XXMI_MODS_PATH: line 28
│   │   ├── DEFAULT_MOD_LIBRARY_PATH: line 29
│   │   └── DEFAULT_D3DX_USER_INI_PATH: line 30
│   ├── GameConfig class: lines 32-85
│   │   ├── GetModsPath: lines 33-37
│   │   ├── GetD3dxUserIniPath: lines 39-43
│   │   ├── GetModLibraryPath: lines 45-59
│   │   │   ├── Game tag mapping: lines 47-55
│   │   │   └── Path construction: line 57
│   │   ├── GetPresetsPath: lines 61-75
│   │   │   ├── Game tag mapping: lines 63-71
│   │   │   └── Path construction: line 73
│   │   └── GetActiveModsFilename: lines 77-95
│   │       ├── Fallback handling: lines 79-83
│   │       ├── Game tag mapping: lines 85-93
│   │       └── Filename construction: line 95
│   ├── UI Constants: lines 97-104
│   │   ├── MIN_WINDOW_WIDTH: line 98
│   │   ├── MIN_WINDOW_HEIGHT: line 99
│   │   ├── MAX_WINDOW_WIDTH: line 100
│   │   ├── MAX_WINDOW_HEIGHT: line 101
│   │   ├── DEFAULT_WINDOW_WIDTH: line 102
│   │   └── DEFAULT_WINDOW_HEIGHT: line 103
│   ├── Cache Limits: lines 105-108
│   │   ├── MAX_IMAGE_CACHE_SIZE: line 106
│   │   └── MAX_RAM_IMAGE_CACHE_SIZE: line 107
│   ├── Timing Constants: lines 109-114
│   │   ├── LOG_REFRESH_INTERVAL_MS: line 110
│   │   ├── PERIODIC_SYNC_INTERVAL_SECONDS: line 111
│   │   └── FILE_WATCHER_DELAY_MS: line 112
│   ├── Regex Patterns: lines 115-120
│   │   ├── PERSISTENT_VARIABLE_PATTERN: line 116
│   │   ├── VARIABLE_ASSIGNMENT_PATTERN: line 117
│   │   └── CONSTANTS_VARIABLE_PATTERN: line 118
│   ├── Section Names: lines 121-123
│   │   └── CONSTANTS_SECTION: line 122
│   └── Default JSON Content: lines 124-126
│       └── DEFAULT_MOD_JSON: line 125

================================================================================
COMPONENT OVERVIEW

CONSTANT CATEGORIES:
- File Extensions: 4 constants for common file types (.json, .ini, .msk)
- Directory Names: 5 constants for standard folder names
- File Names: 6 constants for specific configuration files
- Default Paths: 3 constants for default directory structures
- UI Constants: 6 constants for window sizing and layout
- Cache Limits: 2 constants for memory management
- Timing Constants: 3 constants for intervals and delays
- Regex Patterns: 3 constants for text parsing
- Section Names: 1 constant for INI file sections
- Default Content: 1 constant for JSON template

GAME CONFIGURATION SYSTEM:
- GetModsPath: Dynamic XXMI mods directory per game
- GetD3dxUserIniPath: Game-specific d3dx_user.ini location
- GetModLibraryPath: Game-specific mod library subdirectories
- GetPresetsPath: Game-specific preset storage locations
- GetActiveModsFilename: Game-specific active mods file naming

SUPPORTED GAMES:
- ZZMI (Zenless Zone Zero) → ZZ subdirectory
- WWMI (Wuthering Waves) → WW subdirectory
- SRMI (Star Rail) → SR subdirectory
- GIMI (Genshin Impact) → GI subdirectory
- HIMI (Honkai Impact) → HI subdirectory
- Default fallback → ZZ subdirectory

PATH STRUCTURE:
- XXMI Mods: .\XXMI\{gameTag}\Mods
- D3DX User INI: .\XXMI\{gameTag}\d3dx_user.ini
- Mod Library: .\ModLibrary\{subDir}
- Presets: .\Settings\Presets\{subDir}
- Active Mods: {subDir}-ActiveMods.json

FILE EXTENSIONS:
- MOD_JSON_FILENAME: "mod.json" - Mod metadata files
- BACKUP_EXTENSION: ".msk" - StatusKeeper backup files
- INI_EXTENSION: ".ini" - Configuration files
- JSON_EXTENSION: ".json" - Data files

DIRECTORY STRUCTURE:
- SETTINGS_FOLDER: "Settings" - Application settings
- LANGUAGE_FOLDER: "Language" - Translation files
- MOD_LIBRARY_FOLDER: "ModLibrary" - Mod storage
- XXMI_FOLDER: "XXMI" - Game injection framework
- ASSETS_FOLDER: "Assets" - Application resources

CONFIGURATION FILES:
- SETTINGS_FILE: "Settings.json" - Main application settings
- ACTIVE_MODS_FILE: "ActiveMods.json" - Active mod tracking
- SYMLINK_STATE_FILE: "SymlinkState.json" - Symlink management
- STATUS_KEEPER_LOG_FILE: "StatusKeeper.log" - StatusKeeper logging
- APPLICATION_LOG_FILE: "Application.log" - General application logging
- D3DX_USER_INI_FILE: "d3dx_user.ini" - D3DX configuration

UI CONFIGURATION:
- Window size constraints: 1280x720 minimum, 20000x15000 maximum
- Default window size: 1650x820 pixels
- Responsive design parameters for different screen sizes

PERFORMANCE SETTINGS:
- MAX_IMAGE_CACHE_SIZE: 100 images in disk cache
- MAX_RAM_IMAGE_CACHE_SIZE: 50 images in memory cache
- Optimized for balance between performance and memory usage

TIMING CONFIGURATION:
- LOG_REFRESH_INTERVAL_MS: 3000ms for log file updates
- PERIODIC_SYNC_INTERVAL_SECONDS: 10s for StatusKeeper sync
- FILE_WATCHER_DELAY_MS: 100ms for file system events

REGEX PATTERNS:
- PERSISTENT_VARIABLE_PATTERN: Parse d3dx_user.ini variables
- VARIABLE_ASSIGNMENT_PATTERN: Parse INI variable assignments
- CONSTANTS_VARIABLE_PATTERN: Parse Constants section variables

USAGE STATISTICS:
- Referenced in 6+ core files
- 25+ active references throughout codebase
- Critical for path resolution and game configuration
- Essential for multi-game support architecture

INTEGRATION POINTS:
- SettingsManager: Default paths and game configuration
- PathManager: File and directory path resolution
- ModGridPage: Mod library and preset paths
- PresetsPage: Game-specific preset management
- StatusKeeperSyncPage: Timing and file patterns
- StatusKeeperLogsPage: Log refresh intervals

DESIGN PATTERNS:
- Static class pattern for global constants
- Nested class pattern for related configurations
- Switch expression pattern for game mapping
- Fallback pattern for unknown games
- Template pattern for path construction

MAINTAINABILITY:
- Centralized configuration management
- Single source of truth for all constants
- Easy addition of new games and paths
- Consistent naming conventions
- Clear categorization of constants

EXTENSIBILITY:
- GameConfig class easily extensible for new games
- Path patterns support additional game types
- Timing constants adjustable for performance tuning
- Cache limits configurable for different hardware
- Regex patterns expandable for new file formats
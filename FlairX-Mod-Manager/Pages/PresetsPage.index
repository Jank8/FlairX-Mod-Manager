COMPONENT: PresetsPage
DESCRIPTION: Page for managing mod activation presets with save, load, and delete functionality

================================================================================
FILE: Pages/PresetsPage.xaml
TOTAL LINES: 50

LINE RANGES:
├── Page Declaration: lines 1-5
│   ├── Class definition: line 2
│   └── Namespace declarations: lines 3-5
├── Main Grid Layout: lines 6-49
│   ├── Grid definitions: lines 7-15
│   │   ├── Column definitions: lines 7-11
│   │   └── Row definitions: lines 12-15
│   ├── Left Panel (ScrollViewer): lines 16-42
│   │   ├── Title section: line 18
│   │   ├── Preset selection: lines 19-21
│   │   ├── Load preset button: lines 22-27
│   │   ├── New preset input: lines 28-30
│   │   ├── Save preset button: lines 31-36
│   │   └── Delete preset button: lines 37-42
│   └── Right Panel (ListView): lines 43-47
│       └── Preset mods display: line 46

UI ELEMENTS:
- PresetsTitle: line 18 - Page title "Presets"
- PresetComboBox: line 20 - Preset selection dropdown
- LoadPresetButton: lines 22-27 - Load selected preset (&#xE898;)
- LoadPresetButtonText: line 25 - Dynamic button text
- PresetNameTextBox: line 29 - New preset name input
- SavePresetButton: lines 31-36 - Save current state as preset (&#xE896;)
- SavePresetButtonText: line 34 - Dynamic button text
- DeletePresetButton: lines 37-42 - Delete selected preset (&#xE74D;)
- DeletePresetButtonText: line 40 - Dynamic button text
- PresetModsListView: line 46 - Display mods in selected preset

================================================================================
FILE: Pages/PresetsPage.xaml.cs
TOTAL LINES: 229

LINE RANGES:
├── Using statements: lines 1-8
├── Namespace declaration: lines 10-11
├── PresetsPage class: lines 12-229
│   ├── Properties and fields: lines 13-27
│   │   ├── PresetsDir property: lines 13-23
│   │   ├── SelectedPresetKey constant: line 24
│   │   └── _presetNames list: line 26
│   ├── Constructor: lines 28-33
│   ├── UpdateTexts method: lines 35-43
│   ├── Preset loading: lines 45-75
│   │   ├── LoadPresetsToComboBox: lines 45-67
│   │   └── EnsurePresetsDir: lines 69-73
│   ├── Save preset functionality: lines 75-125
│   │   └── SavePresetButton_Click: lines 75-125
│   │       ├── Path setup: lines 75-85
│   │       ├── Active mods reading: lines 87-110
│   │       ├── Preset saving: lines 112-120
│   │       └── Success feedback: lines 122-125
│   ├── Load preset functionality: lines 127-140
│   │   └── LoadPresetButton_Click: lines 127-140
│   ├── Delete preset functionality: lines 142-160
│   │   └── DeletePresetButton_Click: lines 142-160
│   ├── Utility methods: lines 162-185
│   │   ├── GetPresetFileNameFromComboBox: lines 162-168
│   │   └── CreateDefaultPresetAllInactive_Click: lines 170-185
│   ├── Dialog helper: lines 187-195
│   │   └── ShowDialog: lines 187-195
│   └── Selection handling: lines 197-229
│       └── PresetComboBox_SelectionChanged: lines 197-229
│           ├── Settings persistence: lines 197-203
│           ├── Preset file reading: lines 204-215
│           └── ListView population: lines 216-229

================================================================================
COMPONENT OVERVIEW

KEY METHODS:
- Constructor: lines 28-33 - Initialize UI and load presets
- LoadPresetsToComboBox: lines 45-67 - Populate dropdown with available presets
- SavePresetButton_Click: lines 75-125 - Save current mod state as new preset
- LoadPresetButton_Click: lines 127-140 - Apply selected preset to mod manager
- DeletePresetButton_Click: lines 142-160 - Remove selected preset file
- PresetComboBox_SelectionChanged: lines 197-229 - Update preview when selection changes

FUNCTIONALITY:
- Save current mod activation state as named presets
- Load presets to restore specific mod configurations
- Delete unwanted presets with file cleanup
- Preview preset contents in ListView
- Game-specific preset storage and management
- Default preset creation with all mods inactive
- Translation support for all UI elements

PRESET SYSTEM:
- JSON file storage in game-specific directories
- Preset files named with .json extension
- Default preset always available as first option
- Current mod activation state captured for saving
- Both active and inactive mods stored in presets
- Automatic directory creation for preset storage

LAYOUT:
- 3-column grid layout (Auto + 32px + 320px)
- Left panel with preset controls in ScrollViewer
- Right panel with preset contents ListView
- Fixed width controls (240px buttons, 320px ListView)
- Proper spacing and margins throughout

USER INTERFACE:
- ComboBox for preset selection with placeholder text
- TextBox for new preset name input
- Buttons with icons and descriptive text
- ListView showing active mods in selected preset
- Success/error dialogs for user feedback
- Settings persistence for selected preset

GAME INTEGRATION:
- Game-specific preset directories using AppConstants
- Active mods file path resolution per game
- Fallback to root presets directory when no game selected
- Integration with ModGridPage for preset application
- Support for game-specific mod configurations

ERROR HANDLING:
- Try-catch blocks for all file operations
- User-friendly error dialogs
- Graceful handling of missing files/directories
- Exception logging for debugging
- Safe JSON serialization/deserialization

TRANSLATION SUPPORT:
- Dynamic text updates using SharedUtilities
- Language dictionary loading for all UI text
- Placeholder text translation
- Button text and title translation
- Error and success message translation

PERFORMANCE:
- Parallel processing for preset file enumeration
- Efficient file system operations
- Minimal UI blocking during operations
- Lazy loading of preset contents
- Optimized directory scanning

SETTINGS INTEGRATION:
- Selected preset index persistence
- Settings save/load integration
- User preference preservation
- Cross-session state maintenance
COMPONENT: StatusKeeperLogsPage
DESCRIPTION: Log management page for StatusKeeper with real-time log viewing, logging control, and file operations

================================================================================
FILE: Pages/StatusKeeperLogsPage.xaml
TOTAL LINES: 59

LINE RANGES:
├── XML Declaration: line 1
├── Page Declaration: lines 2-9
│   ├── Class definition: line 3
│   └── Namespace declarations: lines 4-9
├── Main Grid Layout: lines 10-58
│   ├── Grid definitions: lines 11-15
│   ├── Logging Toggle Section: lines 17-21
│   │   ├── Toggle label: line 18
│   │   └── Toggle switch: line 19
│   ├── Button Controls Section: lines 23-37
│   │   ├── Open log button: lines 24-29
│   │   │   ├── Button icon: line 26
│   │   │   └── Button text: line 27
│   │   └── Clear log button: lines 30-35
│   │       ├── Button icon: line 32
│   │       └── Button text: line 33
│   └── Log Viewer Section: lines 39-57
│       ├── Border container: lines 39-44
│       ├── ScrollViewer: lines 45-50
│       └── TextBlock content: lines 51-56

UI ELEMENTS:
- LoggingLabel: line 18 - Logging toggle label
- LoggingToggle: line 19 - Enable/disable logging toggle switch
- OpenLogButton: lines 24-29 - Open log file button (&#xE8A7;)
- OpenLogButtonText: line 27 - Open log button text
- ClearLogButton: lines 30-35 - Clear log file button (&#xE74D;)
- ClearLogButtonText: line 33 - Clear log button text
- LogsScrollViewer: lines 45-50 - Scrollable log viewer container
- LogsTextBlock: lines 51-56 - Log content display with Consolas font

================================================================================
FILE: Pages/StatusKeeperLogsPage.xaml.cs
TOTAL LINES: 198

LINE RANGES:
├── Using statements: lines 1-8
├── Namespace declaration: lines 10-11
├── StatusKeeperLogsPage class: lines 12-198
│   ├── Fields: lines 13-16
│   │   ├── Settings instance: line 14
│   │   ├── Timer reference: line 15
│   │   └── Refresh interval constant: line 16
│   ├── Constructor: lines 18-23
│   │   ├── Component initialization: line 20
│   │   ├── Text updates: line 21
│   │   └── Timer initialization: line 22
│   ├── Timer Management: lines 25-30
│   │   └── InitLogRefreshTimer: lines 25-30
│   │       ├── Timer creation: line 27
│   │       ├── Interval setup: line 28
│   │       └── Event handler: line 29
│   ├── UI Management: lines 32-42
│   │   ├── UpdateTexts: lines 32-37
│   │   │   ├── Language loading: line 34
│   │   │   └── Label translations: lines 35-37
│   │   └── LoadSettingsToUI: lines 39-42
│   │       └── Toggle state loading: line 41
│   ├── Page Lifecycle: lines 44-58
│   │   ├── OnNavigatedTo: lines 44-53
│   │   │   ├── Parameter handling: lines 47-50
│   │   │   ├── Content refresh: line 51
│   │   │   └── Timer start: line 52
│   │   └── OnNavigatedFrom: lines 55-58
│   │       └── Timer stop: line 57
│   ├── Log Content Management: lines 60-85
│   │   └── RefreshLogContent: lines 60-85
│   │       ├── File existence check: lines 62-63
│   │       ├── Content reading: lines 65-66
│   │       ├── Line processing: lines 68-72
│   │       ├── Error handling: lines 74-76
│   │       └── File not found handling: lines 78-85
│   ├── Utility Methods: lines 87-95
│   │   ├── GetLogPath: lines 87-90
│   │   │   └── Path resolution: line 89
│   │   └── InitFileLogging: lines 92-95
│   │       ├── Timestamp creation: line 94
│   │       └── File initialization: line 95
│   ├── Event Handlers: lines 97-198
│   │   ├── LoggingToggle_Toggled: lines 97-112
│   │   │   ├── Settings update: lines 99-100
│   │   │   ├── Log path resolution: line 101
│   │   │   ├── Logging initialization: lines 102-108
│   │   │   └── Content refresh: line 111
│   │   ├── OpenLogButton_Click: lines 114-148
│   │   │   ├── File existence check: lines 118-119
│   │   │   ├── File opening: lines 121-131
│   │   │   ├── Error dialogs: lines 133-142
│   │   │   └── Exception handling: lines 144-148
│   │   └── ClearLogButton_Click: lines 150-198
│   │       ├── File existence check: lines 154-155
│   │       ├── File deletion: lines 157-158
│   │       ├── Log reinitialization: lines 160-165
│   │       ├── Content refresh: line 167
│   │       ├── Success dialog: lines 169-170
│   │       ├── Info dialog: lines 172-175
│   │       └── Exception handling: lines 177-181

================================================================================
COMPONENT OVERVIEW

KEY METHODS:
- Constructor: lines 18-23 - Initialize page, update texts, and setup timer
- InitLogRefreshTimer: lines 25-30 - Setup automatic log refresh timer
- UpdateTexts: lines 32-37 - Apply translations to all UI elements
- LoadSettingsToUI: lines 39-42 - Load logging toggle state from settings
- RefreshLogContent: lines 60-85 - Read and display log file content with newest entries first
- GetLogPath: lines 87-90 - Resolve StatusKeeper log file path
- InitFileLogging: lines 92-95 - Initialize log file with timestamp header
- LoggingToggle_Toggled: lines 97-112 - Handle logging enable/disable
- OpenLogButton_Click: lines 114-148 - Open log file in default text editor
- ClearLogButton_Click: lines 150-198 - Clear log file with confirmation

FUNCTIONALITY:
- Real-time log content viewing with automatic refresh
- Logging enable/disable toggle with immediate effect
- Log file opening in default system text editor
- Log file clearing with reinitialization
- Newest log entries displayed at the top
- Monospace font (Consolas) for log readability
- Scrollable log viewer with text selection support
- Automatic timer management on page navigation

LOG MANAGEMENT:
- StatusKeeper.log file in settings directory
- UTF-8 encoding for proper character support
- Automatic log file creation when logging enabled
- Log file deletion and reinitialization on clear
- Timestamp headers for log sessions
- Reverse chronological order display (newest first)
- Empty log and file not found state handling

REAL-TIME UPDATES:
- DispatcherTimer for automatic log refresh
- Configurable refresh interval via AppConstants
- Timer start/stop on page navigation
- Immediate content refresh on logging toggle
- Scroll position reset to show newest entries
- Efficient file reading with error handling

USER INTERFACE:
- Three-row grid layout for organized sections
- Toggle switch for logging control
- Icon-enhanced buttons for clear actions
- Bordered log viewer with theme-aware styling
- Horizontal button layout with consistent spacing
- Responsive design with proper margins and padding
- Text selection enabled for log content copying

TRANSLATION SUPPORT:
- StatusKeeper-specific language dictionary loading
- Dynamic text updates for all UI elements
- Localized dialog messages and titles
- Error message localization
- Status message translation
- Empty log state message translation

ERROR HANDLING:
- Try-catch blocks for all file operations
- Graceful handling of missing log files
- User-friendly error dialogs with translations
- Debug logging for troubleshooting
- Safe file operations with validation
- Exception message display in dialogs

SETTINGS INTEGRATION:
- Deep integration with SettingsManager
- Persistent logging toggle state
- Automatic settings saving on changes
- Parameter-based settings loading
- Cross-session state maintenance
- Settings synchronization with UI

FILE OPERATIONS:
- Safe file reading with UTF-8 encoding
- File existence validation before operations
- Atomic file deletion and recreation
- Default application integration for file opening
- Path resolution through PathManager
- File system error handling and recovery

PERFORMANCE:
- Efficient log content processing
- Minimal UI blocking during operations
- Optimized file reading operations
- Smart timer management to prevent resource leaks
- Lazy loading of log content
- Memory-efficient string operations

INTEGRATION:
- SharedUtilities integration for common operations
- PathManager integration for file paths
- SettingsManager integration for persistence
- StatusKeeperSettings parameter handling
- AppConstants integration for configuration
- Cross-component dialog utilities

VISUAL DESIGN:
- Card-style bordered log viewer
- Theme-aware background and border colors
- Consistent button styling with icons
- Proper spacing and alignment
- Monospace font for log readability
- Rounded corners for modern appearance
- Responsive layout adaptation